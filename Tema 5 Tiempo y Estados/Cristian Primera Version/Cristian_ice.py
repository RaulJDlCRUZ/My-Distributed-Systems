# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.9
#
# <auto-generated>
#
# Generated from file `Cristian.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module Cristian
_M_Cristian = Ice.openModule('Cristian')
__name__ = 'Cristian'

_M_Cristian._t_TimePrinter = IcePy.defineValue('::Cristian::TimePrinter', Ice.Value, -1, (), False, True, None, ())

if 'TimePrinterPrx' not in _M_Cristian.__dict__:
    _M_Cristian.TimePrinterPrx = Ice.createTempClass()
    class TimePrinterPrx(Ice.ObjectPrx):

        def write(self, context=None):
            return _M_Cristian.TimePrinter._op_write.invoke(self, ((), context))

        def writeAsync(self, context=None):
            return _M_Cristian.TimePrinter._op_write.invokeAsync(self, ((), context))

        def begin_write(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_Cristian.TimePrinter._op_write.begin(self, ((), _response, _ex, _sent, context))

        def end_write(self, _r):
            return _M_Cristian.TimePrinter._op_write.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_Cristian.TimePrinterPrx.ice_checkedCast(proxy, '::Cristian::TimePrinter', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_Cristian.TimePrinterPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::Cristian::TimePrinter'
    _M_Cristian._t_TimePrinterPrx = IcePy.defineProxy('::Cristian::TimePrinter', TimePrinterPrx)

    _M_Cristian.TimePrinterPrx = TimePrinterPrx
    del TimePrinterPrx

    _M_Cristian.TimePrinter = Ice.createTempClass()
    class TimePrinter(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Cristian::TimePrinter', '::Ice::Object')

        def ice_id(self, current=None):
            return '::Cristian::TimePrinter'

        @staticmethod
        def ice_staticId():
            return '::Cristian::TimePrinter'

        def write(self, current=None):
            raise NotImplementedError("servant method 'write' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_Cristian._t_TimePrinterDisp)

        __repr__ = __str__

    _M_Cristian._t_TimePrinterDisp = IcePy.defineClass('::Cristian::TimePrinter', TimePrinter, (), None, ())
    TimePrinter._ice_type = _M_Cristian._t_TimePrinterDisp

    TimePrinter._op_write = IcePy.Operation('write', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_string, False, 0), ())

    _M_Cristian.TimePrinter = TimePrinter
    del TimePrinter

# End of module Cristian
